aliases:
  - &wait_for_mongo
    run:
      name: Wait for MongoDB
      command: dockerize -wait tcp://localhost:27017 -timeout 1m
      
  - &restore_pkg_cache
    keys:
      - v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
      - v1-node-{{ arch }}-{{ .Branch }}-
      - v1-node-{{ arch }}-
  
  - &save_pkg_cache
    name: Saving package cache
    key: v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules
  
  - &yarn_install
    name: Install packages
    command: yarn install
  
  - &store_coverage_results
    store_test_results:
      path: ./test/reports

  - &store_coverage_artifacts
    store_artifacts:
      path: ./test/reports
  
  - &attach_workspace
    attach_workspace:
      at: ~/crud-api
  
  - &dependencies
    - checkout
    - *attach_workspace
    - restore_cache: *restore_pkg_cache
    - run: *yarn_install
    - save_cache: *save_pkg_cache
    - persist_to_workspace:
        root: .
        paths:
         - node_modules
  
  - &lint_steps
    - checkout
    - *attach_workspace
    - run:
        name: Analyze code for smells
        command: yarn lint:ci
    - *store_coverage_results
    - *store_coverage_artifacts
  
  - &test_steps
    - checkout
    - *wait_for_mongo
    - *attach_workspace
    - run:
        name: Running test
        command: yarn test:ci
    - *store_coverage_results
    - *store_coverage_artifacts

  
  - &build_image
    working_directory: ~/crud-api
    docker:
      - image: circleci/node:lts
      - image: circleci/mongo:4.0.9-ram

  - &builder
    - "Build"
          

version: 2
workflows:
  version: 2
  build_lint_test:
    jobs:
      - "Build"
      - "Linting":
          requires: *builder
      - "Tests":
          requires: *builder
         

jobs:
  "Build":
    <<: *build_image

    # parallelism: 2
    steps: *dependencies
  
  "Linting":
    <<: *build_image

    steps: *lint_steps
  
  "Tests":
    <<: *build_image

    steps: *test_steps
 